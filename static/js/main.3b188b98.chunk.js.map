{"version":3,"sources":["api/apollo.js","layout/section-header.jsx","api/gql.js","queries/user-query.jsx","components/general-error.jsx","components/loading-indicator.jsx","components/balance-table.jsx","components/transaction-table.jsx","components/card-item.jsx","components/user-feed.jsx","layout/application-data.jsx","layout/template.jsx","app.js","serviceWorker.js","index.js"],"names":["cache","InMemoryCache","client","ApolloClient","uri","SectionHeader","_this$props","this","props","classes","title","subtitle","react_default","a","createElement","className","sectionContainer","Typography_default","variant","color","gutterBottom","Component","withStyles","styles","theme","marginTop","spacing","unit","marginBottom","fontWeight","LOAD_USER_DATA","gql","_templateObject","loadMoreUsers","fetchMore","userData","query","variables","skip","length","updateQuery","previousResult","_ref3","fetchMoreResult","prevData","users","newData","concat","Object","toConsumableArray","UserQuery","_ref","children","react_apollo_esm","_ref2","loading","error","data","React","Children","map","child","cloneElement","loadMore","icon","position","top","marginRight","GeneralError","message","index_es","Error_default","LoadingIndicator","center","CircularProgress_default","progress","width","height","BalanceTable","balances","react","Table_default","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","keys","symbol","i","key","component","scope","src","process","alt","gt","toBN","fromWei","TransactionTable","transactions","row","moment","timeStamp","format","event","tokenSymbol","ethAmount","tokenAmount","ETH","CardItem","state","open","openDialog","_this","setState","closeDialog","calculateBalances","exchangeBalances","forEach","item","id","substring","indexOf","add","ethBought","ethDeposited","sub","ethWithdrawn","totalEthFeesPaid","tokensBought","tokensDeposited","tokensWithdrawn","totalTokenFeesPaid","Card_default","card","CardActionArea_default","onClick","CardHeader_default","avatar","main_default","seed","subheader","CardContent_default","balance_table","Dialog_default","fullScreen","onClose","aria-labelledby","DialogTitle_default","IconButton_default","aria-label","Close_default","DialogContent_default","transaction_table","withMobileDialog","minWidth","margin","boxShadow","borderRadius","bullet","display","transform","fontSize","pos","textAlign","UserFeed","LinearProgress_default","general_error","react_infinite_scroller_default","pageStart","initialLoad","hasMore","loader","loading_indicator","Date","getTime","txs","card_item","ApplicationData","user_query","user_feed","root","flexGrow","backgroundColor","palette","grey","overflow","backgroundSize","backgroundPosition","padding","paddingBottom","grid","Template","Grid_default","container","justify","alignItems","xs","createMuiTheme","typography","useNextVariants","primary","main","App","core_styles","CssBaseline_default","template","section_header","application_data","Boolean","window","location","hostname","match","ReactDOM","render","src_app","document","querySelector","unregister","navigator","serviceWorker","ready","then","registration"],"mappings":"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","file":"static/js/main.3b188b98.chunk.js","sourcesContent":["import ApolloClient from 'apollo-boost';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\n\nconst cache = new InMemoryCache();\n\nconst client = new ApolloClient({\n  uri: 'https://api.thegraph.com/subgraphs/name/graphprotocol/uniswap',\n  cache\n});\n\nexport default client;\n","import React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Typography from '@material-ui/core/Typography';\nimport PropTypes from 'prop-types';\n\nconst styles = theme => ({\n  sectionContainer: {\n    marginTop: theme.spacing.unit * 4,\n    marginBottom: theme.spacing.unit * 4\n  },\n  title: {\n    fontWeight: 'bold'\n  }\n});\n\nclass SectionHeader extends Component {\n  render() {\n    const { classes, title, subtitle } = this.props;\n    return (\n      <div className={classes.sectionContainer}>\n        <Typography variant=\"h6\" color=\"primary\" className={classes.title}>\n          {title}\n        </Typography>\n        <Typography variant=\"body1\" gutterBottom>\n          {subtitle}\n        </Typography>\n      </div>\n    );\n  }\n}\n\nSectionHeader.propTypes = {\n  classes: PropTypes.object,\n  title: PropTypes.string,\n  subtitle: PropTypes.string\n};\n\nexport default withStyles(styles)(SectionHeader);\n","import gql from 'graphql-tag';\n\n// Using `skip` like examples here: https://thegraph.com/docs/graphql-api\n// I tried using cursors but they seem to not be supported\n\nexport const LOAD_USER_DATA = gql`\n  query users($skip: Int) {\n    users(first: 7, skip: $skip) {\n      id\n      exchangeBalances {\n        id\n        ethDeposited\n        tokensDeposited\n        ethWithdrawn\n        tokensWithdrawn\n        ethBought\n        tokensBought\n        totalEthFeesPaid\n        totalTokenFeesPaid\n      }\n      txs {\n        id\n        event\n        timeStamp\n        ethAmount\n        tokenAmount\n        tokenSymbol\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport { Query } from 'react-apollo';\nimport { LOAD_USER_DATA } from '../api/gql';\nimport PropTypes from 'prop-types';\n\nconst UserQuery = ({children}) => (\n  <Query query={LOAD_USER_DATA}>\n    {({ loading, error, data, fetchMore }) => \n      React.Children.map(children, child =>\n        React.cloneElement(child, { error, loading, data, loadMore: loadMoreUsers(fetchMore, data.users) })\n      )\n    }\n  </Query>\n);\n\nUserQuery.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n};\n\nconst loadMoreUsers = (fetchMore, userData) => () => {\n  fetchMore({\n    query: LOAD_USER_DATA,\n    variables: { skip: userData.length },\n    updateQuery: (previousResult, { fetchMoreResult }) => {\n      const prevData = previousResult.users;\n      const newData = fetchMoreResult.users;\n      return { users: [...prevData, ...newData] };\n    }\n  });\n};\n\nexport default UserQuery;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport { Typography } from '@material-ui/core';\n\nconst styles = theme => ({\n  icon: {\n    position: 'relative',\n    top: '4px',\n    marginRight: theme.spacing.unit * 2\n  }\n});\n\nconst GeneralError = ({ classes, message }) => (\n  <Typography variant=\"h5\" color=\"primary\">\n    <ErrorIcon className={classes.icon} color=\"primary\" /> {message}\n  </Typography>\n);\n\nGeneralError.propTypes = {\n  classes: PropTypes.object,\n  message: PropTypes.string\n};\n\nexport default withStyles(styles)(GeneralError);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst LoadingIndicator = ({ classes }) => (\n  <div className={classes.center}>\n    <CircularProgress className={classes.progress} color=\"primary\" />\n  </div>\n);\n\nLoadingIndicator.propTypes = {\n  classes: PropTypes.object\n};\n\nexport default LoadingIndicator;\n","import React, { Fragment } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { fromWei, toBN } from 'web3-utils';\nimport PropTypes from 'prop-types';\nimport { Typography } from '@material-ui/core';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = theme => ({\n  icon: {\n    width: '1rem',\n    height: '1rem',\n    position: 'relative',\n    top: '4px',\n    marginRight: theme.spacing.unit * 2\n  }\n});\n\nconst BalanceTable = ({ classes, balances }) => (\n  <Fragment>\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableCell>\n            <Typography variant=\"body1\" color=\"primary\">\n              Asset\n            </Typography>\n          </TableCell>\n          <TableCell align=\"right\">\n            <Typography variant=\"body1\" color=\"primary\">\n              Balance\n            </Typography>\n          </TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {Object.keys(balances)\n          .map((symbol, i) => (\n            <TableRow key={i}>\n              <TableCell component=\"th\" scope=\"row\">\n                <img className={classes.icon} src={process.env.PUBLIC_URL + '/images/' + symbol + '.png'} alt=\"\" />{' '}\n                <b>{symbol}</b>\n              </TableCell>\n              <TableCell align=\"right\">{balances[symbol].gt(toBN(0)) ? fromWei(balances[symbol], 'ether') : '0'}</TableCell>\n            </TableRow>\n          ))}\n      </TableBody>\n    </Table>\n  </Fragment>\n);\n\nBalanceTable.propTypes = {\n  balances: PropTypes.object,\n  classes: PropTypes.object\n};\n\nexport default withStyles(styles)(BalanceTable);\n","import React, { Fragment } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { fromWei } from 'web3-utils';\nimport PropTypes from 'prop-types';\nimport { Typography } from '@material-ui/core';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport * as moment from 'moment';\n\nconst styles = theme => ({\n  icon: {\n    width: '1rem',\n    height: '1rem',\n    position: 'relative',\n    top: '4px',\n    marginRight: theme.spacing.unit * 2\n  }\n});\n\nconst TransactionTable = ({ classes, transactions }) => (\n  <Fragment>\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableCell align=\"right\" width=\"5%\">\n            <Typography variant=\"body1\" color=\"primary\">\n            #\n            </Typography>\n          </TableCell>\n          <TableCell>\n            <Typography variant=\"body1\" color=\"primary\">\n              Date\n            </Typography>\n          </TableCell>\n          <TableCell>\n            <Typography variant=\"body1\" color=\"primary\">\n              Event\n            </Typography>\n          </TableCell>\n          <TableCell>\n            <Typography variant=\"body1\" color=\"primary\">\n              Token\n            </Typography>\n          </TableCell>\n          <TableCell align=\"right\">\n            <Typography variant=\"body1\" color=\"primary\">\n              ETH Amount\n            </Typography>\n          </TableCell>\n          <TableCell align=\"right\">\n            <Typography variant=\"body1\" color=\"primary\">\n              Token Amount\n            </Typography>\n          </TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {\n          transactions.map((row, i) => (\n            <TableRow key={i}>\n              <TableCell component=\"th\" scope=\"row\" align=\"right\">\n                {transactions.length - i}\n              </TableCell>\n              <TableCell>\n                {moment(row.timeStamp * 1000).format(\"YYYY-MM-DD HH:mm:ss\")}\n              </TableCell>\n              <TableCell>\n                {row.event}\n              </TableCell>\n              <TableCell>\n                <img className={classes.icon} src={process.env.PUBLIC_URL + '/images/' + row.tokenSymbol + '.png'} alt=\"\" />{' '}\n                <b>{row.tokenSymbol}</b>\n              </TableCell>\n              <TableCell align=\"right\">{fromWei(row.ethAmount, 'ether')}</TableCell>\n              <TableCell align=\"right\">{fromWei(row.tokenAmount, 'ether')}</TableCell>\n            </TableRow>\n          ))}\n      </TableBody>\n    </Table>\n  </Fragment>\n);\n\nTransactionTable.propTypes = {\n  transactions: PropTypes.array,\n  classes: PropTypes.object\n};\n\nexport default withStyles(styles)(TransactionTable);\n","import React, { Component, Fragment } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Blockie from 'react-blockies';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport BalanceTable from './balance-table';\nimport TransactionTable from './transaction-table';\nimport PropTypes from 'prop-types';\nimport { toBN } from 'web3-utils';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport withMobileDialog from '@material-ui/core/withMobileDialog';\n\nconst styles = theme => ({\n  card: {\n    minWidth: 275,\n    margin: theme.spacing.unit * 3,\n    boxShadow: '0 4px 8px 0 rgba(47,128,237,.1)',\n    borderRadius: '1.25rem'\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  }\n});\n\nconst ETH = 'ETH';\n\nclass CardItem extends Component {\n  state = {\n    open: false\n  };\n\n  openDialog = () => {\n    this.setState({ open: true });\n  };\n\n  closeDialog = () => {\n    this.setState({ open: false });\n  };\n\n  calculateBalances = exchangeBalances => {\n    const balances = {ETH: toBN(0)};\n\n    exchangeBalances.forEach(item => {\n      const tokenSymbol = item.id.substring(0, item.id.indexOf('-'));\n      balances[ETH] = (balances[ETH]).add(toBN(item.ethBought)).add(toBN(item.ethDeposited)).sub(toBN(item.ethWithdrawn)).sub(toBN(item.totalEthFeesPaid));\n      balances[tokenSymbol] = (balances[tokenSymbol] || toBN(0)).add(toBN(item.tokensBought)).add(toBN(item.tokensDeposited)).add(toBN(item.tokensWithdrawn)).sub(toBN(item.totalTokenFeesPaid));\n    });\n\n    return balances;\n  };\n\n  render() {\n    const { classes, id, transactions, exchangeBalances } = this.props;\n    return (\n      <Fragment>\n        <Card className={classes.card}>\n          <CardActionArea onClick={this.openDialog}>\n            <CardHeader avatar={<Blockie seed={id} />} title={id} subheader=\"UserID\" />\n            <CardContent>\n              <BalanceTable balances={this.calculateBalances(exchangeBalances)} />\n            </CardContent>\n          </CardActionArea>\n        </Card>\n        <Dialog\n          fullScreen={true}\n          open={this.state.open}\n          onClose={this.closeDialog}\n          aria-labelledby=\"responsive-dialog-title\"\n        >\n          <DialogTitle id=\"responsive-dialog-title\" color=\"primary\">\n            {id}\n            <IconButton color=\"primary\" onClick={this.closeDialog} aria-label=\"Close\">\n              <CloseIcon />\n            </IconButton>\n          </DialogTitle>\n          <DialogContent>\n            <TransactionTable id={id} transactions={transactions} />\n          </DialogContent>\n        </Dialog>\n      </Fragment>\n    );\n  }\n}\n\nCardItem.propTypes = {\n  classes: PropTypes.object,\n  id: PropTypes.string,\n  transactions: PropTypes.array,\n  exchangeBalances: PropTypes.array\n};\n\nexport default withMobileDialog()(withStyles(styles)(CardItem));\n","import React from 'react';\nimport GeneralError from './general-error';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport LoadingIndicator from './loading-indicator';\nimport CardItem from './card-item';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nconst styles = theme => ({\n  center: {\n    textAlign: 'center'\n  },\n  progress: {\n    marginTop: theme.spacing.unit * 2\n  }\n});\n\nconst UserFeed = ({classes, error, loading, loadMore, data: {users}}) => {\n  if (loading) return <LinearProgress color=\"primary\" />;\n  if (error) return <GeneralError classes={classes} message={error.message} />;\n\n  return (\n    <InfiniteScroll\n      pageStart={0}\n      initialLoad={false}\n      loadMore={loadMore}\n      hasMore={true}\n      loader={<LoadingIndicator key={new Date().getTime()} classes={classes} />}\n    >\n      {users.map(({ id, txs, exchangeBalances }, i) => (\n        <CardItem key={i} id={id} exchangeBalances={exchangeBalances} transactions={txs} />\n      ))}\n    </InfiniteScroll>\n  );\n};\n\nUserFeed.propTypes = {\n  classes: PropTypes.object,\n  error: PropTypes.object,\n  loading: PropTypes.bool,\n  loadMore: PropTypes.func,\n  data: PropTypes.object\n};\n\nexport default withStyles(styles)(UserFeed);\n","import React, { Component } from 'react';\nimport UserQuery from '../queries/user-query';\nimport UserFeed from '../components/user-feed';\n\nclass ApplicationData extends Component {\n  render() {\n    return <UserQuery>\n      <UserFeed />\n    </UserQuery>;\n  }\n}\n\nexport default ApplicationData;\n","import React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.grey['A500'],\n    overflow: 'hidden',\n    backgroundSize: 'cover',\n    backgroundPosition: '0 400px',\n    marginTop: 20,\n    padding: 20,\n    paddingBottom: 200\n  },\n  grid: {\n    width: 1000\n  }\n});\n\nconst Template = ({classes, children}) => (\n  <div className={classes.root}>\n    <Grid container justify=\"center\">\n      <Grid spacing={24} alignItems=\"center\" justify=\"center\" container className={classes.grid}>\n        <Grid item xs={12}>\n          {children}\n        </Grid>\n      </Grid>\n    </Grid>\n  </div>\n);\n\nTemplate.propTypes = {\n  classes: PropTypes.object,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n};\n\nexport default withStyles(styles)(Template);\n","import React, { Component } from 'react';\nimport './app.css';\nimport { ApolloProvider } from 'react-apollo';\nimport client from './api/apollo';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport SectionHeader from './layout/section-header';\nimport ApplicationData from './layout/application-data';\nimport Template from './layout/template';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true\n  },\n  palette: {\n    primary: {\n      main: '#dc6be5'\n    }\n  }\n});\n\nclass App extends Component {\n  render() {\n    return (\n      <ApolloProvider client={client}>\n        <MuiThemeProvider theme={theme}>\n          <CssBaseline />\n          <Template>\n            <SectionHeader title=\"🦄 Uniswap - User data\" subtitle=\"Demo project using GraphQL\" />\n            <ApplicationData />\n          </Template>\n        </MuiThemeProvider>\n      </ApolloProvider>\n    );\n  }\n}\n\nexport default App;\n","/* eslint-disable unicorn/filename-case  */\n/* eslint-disable no-eq-null */\n/* eslint-disable unicorn/regex-shorthand */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />,  document.querySelector('#root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}