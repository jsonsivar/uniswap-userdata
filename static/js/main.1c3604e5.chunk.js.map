{"version":3,"sources":["api/apollo.js","layout/section-header.jsx","api/gql.js","queries/user-query.jsx","components/general-error.jsx","components/loading-indicator.jsx","components/balance-table.jsx","components/transaction-table.jsx","components/card-item.jsx","components/form-dialog.jsx","components/user-feed.jsx","layout/application-data.jsx","layout/template.jsx","i18n.js","app.js","serviceWorker.js","index.js"],"names":["cache","InMemoryCache","client","ApolloClient","uri","SectionHeader","_this$props","this","props","classes","title","subtitle","react_default","a","createElement","className","sectionContainer","Typography_default","variant","color","gutterBottom","Component","withStyles","styles","theme","marginTop","spacing","unit","marginBottom","fontWeight","LOAD_USER_DATA","gql","_templateObject","loadMoreUsers","fetchMore","userData","query","variables","skip","length","updateQuery","previousResult","_ref3","fetchMoreResult","prevData","users","newData","concat","Object","toConsumableArray","UserQuery","_ref","children","react_apollo_esm","_ref2","loading","error","data","React","Children","map","child","cloneElement","loadMore","icon","position","top","marginRight","GeneralError","message","index_es","Error_default","LoadingIndicator","center","CircularProgress_default","progress","withTranslation","width","height","BalanceTable","balances","t","react","Table_default","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","keys","symbol","i","key","component","scope","src","process","alt","gt","toBN","fromWei","TransactionTable","transactions","colSpan","row","moment","timeStamp","format","event","tokenSymbol","ethAmount","tokenAmount","ETH","CardItem","state","open","openDialog","_this","setState","closeDialog","calculateBalances","exchangeBalances","forEach","item","id","substring","indexOf","add","ethBought","ethDeposited","sub","ethWithdrawn","totalEthFeesPaid","tokensBought","tokensDeposited","tokensWithdrawn","totalTokenFeesPaid","Card_default","card","CardActionArea_default","onClick","CardHeader_default","avatar","main_default","seed","subheader","CardContent_default","balance_table","Dialog_default","fullScreen","onClose","aria-labelledby","DialogTitle_default","IconButton_default","aria-label","Close_default","DialogContent_default","transaction_table","minWidth","margin","boxShadow","borderRadius","bullet","display","transform","fontSize","pos","FormDialog","handleClose","FormControl_default","InputLabel_default","Select_default","value","fullWidth","MenuItem_default","TextField_default","autoFocus","label","type","step","DialogActions_default","Button_default","UserFeed","handleOpen","LinearProgress_default","general_error","react_infinite_scroller_default","pageStart","initialLoad","hasMore","loader","loading_indicator","Date","getTime","txs","card_item","Fab_default","fab","Add_default","form_dialog","textAlign","bottom","right","palette","common","white","ApplicationData","user_query","user_feed","root","flexGrow","backgroundColor","grey","overflow","backgroundSize","backgroundPosition","padding","paddingBottom","grid","Template","Grid_default","container","justify","alignItems","xs","i18n","use","initReactI18next","LngDetector","init","resources","en","translation","translationEn","debug","fallbackLng","interpolation","escapeValue","createMuiTheme","typography","useNextVariants","primary","main","App","core_styles","es","CssBaseline_default","template","section_header","application_data","Boolean","window","location","hostname","match","ReactDOM","render","src_app","document","querySelector","unregister","navigator","serviceWorker","ready","then","registration"],"mappings":"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","file":"static/js/main.1c3604e5.chunk.js","sourcesContent":["import ApolloClient from 'apollo-boost';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\n\nconst cache = new InMemoryCache();\n\nconst client = new ApolloClient({\n  uri: 'https://api.thegraph.com/subgraphs/name/graphprotocol/uniswap',\n  cache\n});\n\nexport default client;\n","import React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Typography from '@material-ui/core/Typography';\nimport PropTypes from 'prop-types';\n\nconst styles = theme => ({\n  sectionContainer: {\n    marginTop: theme.spacing.unit * 4,\n    marginBottom: theme.spacing.unit * 4\n  },\n  title: {\n    fontWeight: 'bold'\n  }\n});\n\nclass SectionHeader extends Component {\n  render() {\n    const { classes, title, subtitle } = this.props;\n    return (\n      <div className={classes.sectionContainer}>\n        <Typography variant=\"h6\" color=\"primary\" className={classes.title}>\n          {title}\n        </Typography>\n        <Typography variant=\"body1\" gutterBottom>\n          {subtitle}\n        </Typography>\n      </div>\n    );\n  }\n}\n\nSectionHeader.propTypes = {\n  classes: PropTypes.object,\n  title: PropTypes.string,\n  subtitle: PropTypes.string\n};\n\nexport default withStyles(styles)(SectionHeader);\n","import gql from 'graphql-tag';\n\n// Using `skip` like examples here: https://thegraph.com/docs/graphql-api\n// I tried using cursors but they seem to not be supported\n\nexport const LOAD_USER_DATA = gql`\n  query users($skip: Int) {\n    users(first: 7, skip: $skip) {\n      id\n      exchangeBalances {\n        id\n        ethDeposited\n        tokensDeposited\n        ethWithdrawn\n        tokensWithdrawn\n        ethBought\n        tokensBought\n        totalEthFeesPaid\n        totalTokenFeesPaid\n      }\n      txs {\n        id\n        event\n        timeStamp\n        ethAmount\n        tokenAmount\n        tokenSymbol\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport { Query } from 'react-apollo';\nimport { LOAD_USER_DATA } from '../api/gql';\nimport PropTypes from 'prop-types';\n\nconst UserQuery = ({children}) => (\n  <Query query={LOAD_USER_DATA}>\n    {({ loading, error, data, fetchMore }) => \n      React.Children.map(children, child =>\n        React.cloneElement(child, { error, loading, data, loadMore: loadMoreUsers(fetchMore, data.users) })\n      )\n    }\n  </Query>\n);\n\nUserQuery.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n};\n\nconst loadMoreUsers = (fetchMore, userData) => () => {\n  fetchMore({\n    query: LOAD_USER_DATA,\n    variables: { skip: userData.length },\n    updateQuery: (previousResult, { fetchMoreResult }) => {\n      const prevData = previousResult.users;\n      const newData = fetchMoreResult.users;\n      return { users: [...prevData, ...newData] };\n    }\n  });\n};\n\nexport default UserQuery;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport { Typography } from '@material-ui/core';\n\nconst styles = theme => ({\n  icon: {\n    position: 'relative',\n    top: '4px',\n    marginRight: theme.spacing.unit * 2\n  }\n});\n\nconst GeneralError = ({ classes, message }) => (\n  <Typography variant=\"h5\" color=\"primary\">\n    <ErrorIcon className={classes.icon} color=\"primary\" /> {message}\n  </Typography>\n);\n\nGeneralError.propTypes = {\n  classes: PropTypes.object,\n  message: PropTypes.string\n};\n\nexport default withStyles(styles)(GeneralError);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst LoadingIndicator = ({ classes }) => (\n  <div className={classes.center}>\n    <CircularProgress className={classes.progress} color=\"primary\" />\n  </div>\n);\n\nLoadingIndicator.propTypes = {\n  classes: PropTypes.object\n};\n\nexport default LoadingIndicator;\n","import React, { Fragment } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { fromWei, toBN } from 'web3-utils';\nimport PropTypes from 'prop-types';\nimport { Typography } from '@material-ui/core';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport {withTranslation} from \"react-i18next\";\n\nconst styles = theme => ({\n  icon: {\n    width: '1rem',\n    height: '1rem',\n    position: 'relative',\n    top: '4px',\n    marginRight: theme.spacing.unit * 2\n  }\n});\n\nconst BalanceTable = ({ classes, balances, t }) => (\n  <Fragment>\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableCell>\n            <Typography variant=\"body1\" color=\"primary\">\n              {t('balance-table.asset')}\n            </Typography>\n          </TableCell>\n          <TableCell align=\"right\">\n            <Typography variant=\"body1\" color=\"primary\">\n              {t('balance-table.balance')}\n            </Typography>\n          </TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {Object.keys(balances)\n          .map((symbol, i) => (\n            <TableRow key={i}>\n              <TableCell component=\"th\" scope=\"row\">\n                <img className={classes.icon} src={process.env.PUBLIC_URL + '/images/' + symbol + '.png'} alt=\"\" />{' '}\n                <b>{symbol}</b>\n              </TableCell>\n              <TableCell align=\"right\">{balances[symbol].gt(toBN(0)) ? fromWei(balances[symbol], 'ether') : '0'}</TableCell>\n            </TableRow>\n          ))}\n      </TableBody>\n    </Table>\n  </Fragment>\n);\n\nBalanceTable.propTypes = {\n  balances: PropTypes.object,\n  classes: PropTypes.object,\n  t: PropTypes.func\n};\n\nexport default withTranslation()(withStyles(styles)(BalanceTable));\n","import React, { Fragment } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { fromWei } from 'web3-utils';\nimport PropTypes from 'prop-types';\nimport { Typography } from '@material-ui/core';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport * as moment from 'moment';\nimport {withTranslation} from \"react-i18next\";\n\nconst styles = theme => ({\n  icon: {\n    width: '1rem',\n    height: '1rem',\n    position: 'relative',\n    top: '4px',\n    marginRight: theme.spacing.unit * 2\n  }\n});\n\nconst TransactionTable = ({classes, transactions, t}) => (\n  <Fragment>\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableCell align=\"right\" width=\"5%\">\n            <Typography variant=\"body1\" color=\"primary\">\n              {t('transaction-table.num')}\n            </Typography>\n          </TableCell>\n          <TableCell>\n            <Typography variant=\"body1\" color=\"primary\">\n              {t('transaction-table.date')}\n            </Typography>\n          </TableCell>\n          <TableCell>\n            <Typography variant=\"body1\" color=\"primary\">\n              {t('transaction-table.event')}\n            </Typography>\n          </TableCell>\n          <TableCell>\n            <Typography variant=\"body1\" color=\"primary\">\n              {t('transaction-table.token')}\n            </Typography>\n          </TableCell>\n          <TableCell align=\"right\">\n            <Typography variant=\"body1\" color=\"primary\">\n              {t('transaction-table.ethAmount')}\n            </Typography>\n          </TableCell>\n          <TableCell align=\"right\">\n            <Typography variant=\"body1\" color=\"primary\">\n              {t('transaction-table.tokenAmount')}\n            </Typography>\n          </TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {transactions.length === 0 && <TableRow>\n          <TableCell colSpan=\"6\">\n            <Typography color=\"primary\" variant=\"body1\">\n              {t('transaction-table.noTransactionsFound')}\n            </Typography>\n          </TableCell>\n        </TableRow>}\n        {\n          transactions.map((row, i) => (\n            <TableRow key={i}>\n              <TableCell component=\"th\" scope=\"row\" align=\"right\">\n                {transactions.length - i}\n              </TableCell>\n              <TableCell>\n                {moment(row.timeStamp * 1000).format(\"YYYY-MM-DD HH:mm:ss\")}\n              </TableCell>\n              <TableCell>\n                {row.event}\n              </TableCell>\n              <TableCell>\n                <img className={classes.icon} src={process.env.PUBLIC_URL + '/images/' + row.tokenSymbol + '.png'} alt=\"\" />{' '}\n                <b>{row.tokenSymbol}</b>\n              </TableCell>\n              <TableCell align=\"right\">{fromWei(row.ethAmount, 'ether')}</TableCell>\n              <TableCell align=\"right\">{fromWei(row.tokenAmount, 'ether')}</TableCell>\n            </TableRow>\n          ))}\n      </TableBody>\n    </Table>\n  </Fragment>\n);\n\nTransactionTable.propTypes = {\n  transactions: PropTypes.array,\n  classes: PropTypes.object,\n  t: PropTypes.func\n};\n\nexport default withTranslation()(withStyles(styles)(TransactionTable));\n","import React, { Component, Fragment } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Blockie from 'react-blockies';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport BalanceTable from './balance-table';\nimport TransactionTable from './transaction-table';\nimport PropTypes from 'prop-types';\nimport { toBN } from 'web3-utils';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {withTranslation} from \"react-i18next\";\n\nconst styles = theme => ({\n  card: {\n    minWidth: 275,\n    margin: theme.spacing.unit * 3,\n    boxShadow: '0 4px 8px 0 rgba(47,128,237,.1)',\n    borderRadius: '1.25rem'\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  }\n});\n\nconst ETH = 'ETH';\n\nclass CardItem extends Component {\n  state = {\n    open: false\n  };\n\n  openDialog = () => {\n    this.setState({ open: true });\n  };\n\n  closeDialog = () => {\n    this.setState({ open: false });\n  };\n\n  calculateBalances = exchangeBalances => {\n    const balances = {ETH: toBN(0)};\n\n    exchangeBalances.forEach(item => {\n      const tokenSymbol = item.id.substring(0, item.id.indexOf('-'));\n      balances[ETH] = (balances[ETH]).add(toBN(item.ethBought)).add(toBN(item.ethDeposited)).sub(toBN(item.ethWithdrawn)).sub(toBN(item.totalEthFeesPaid));\n      balances[tokenSymbol] = (balances[tokenSymbol] || toBN(0)).add(toBN(item.tokensBought)).add(toBN(item.tokensDeposited)).add(toBN(item.tokensWithdrawn)).sub(toBN(item.totalTokenFeesPaid));\n    });\n\n    return balances;\n  };\n\n  render() {\n    const { classes, id, transactions, exchangeBalances, t } = this.props;\n    return (\n      <Fragment>\n        <Card className={classes.card}>\n          <CardActionArea onClick={this.openDialog}>\n            <CardHeader avatar={<Blockie seed={id} />} title={id} subheader={t('card-item.userId')} />\n            <CardContent>\n              <BalanceTable balances={this.calculateBalances(exchangeBalances)} />\n            </CardContent>\n          </CardActionArea>\n        </Card>\n        <Dialog\n          fullScreen={true}\n          open={this.state.open}\n          onClose={this.closeDialog}\n          aria-labelledby=\"responsive-dialog-title\"\n        >\n          <DialogTitle id=\"responsive-dialog-title\" color=\"primary\">\n            {id}\n            <IconButton color=\"primary\" onClick={this.closeDialog} aria-label=\"Close\">\n              <CloseIcon />\n            </IconButton>\n          </DialogTitle>\n          <DialogContent>\n            <TransactionTable id={id} transactions={transactions} />\n          </DialogContent>\n        </Dialog>\n      </Fragment>\n    );\n  }\n}\n\nCardItem.propTypes = {\n  classes: PropTypes.object,\n  id: PropTypes.string,\n  transactions: PropTypes.array,\n  exchangeBalances: PropTypes.array,\n  t: PropTypes.func\n};\n\nexport default withTranslation()(withStyles(styles)(CardItem));\n","\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport PropTypes from 'prop-types';\nimport {withTranslation} from \"react-i18next\";\n\nconst FormDialog = ({handleClose, open, t}) => (<Dialog open={open} aria-labelledby=\"form-dialog-title\">\n  <DialogTitle id=\"form-dialog-title\">{t('form-dialog.title')}</DialogTitle>\n  <DialogContent>\n    <div>\n      <FormControl>\n        <InputLabel>{t('form-dialog.from')}</InputLabel>\n        <Select value=\"0x0000000000000000000000000000000000000000\" fullWidth>\n          <MenuItem value=\"\">\n            <em>0x0000000000000000000000000000000000000000</em>\n          </MenuItem>\n          <MenuItem value={\"0x0000000000000000000000000000000000000001\"}>0x0000000000000000000000000000000000000001</MenuItem>\n          <MenuItem value={\"0x0000000000000000000000000000000000000002\"}>0x0000000000000000000000000000000000000002</MenuItem>\n        </Select>\n      </FormControl>\n    </div>\n    <div>\n      <FormControl>\n        <InputLabel>{t('form-dialog.to')}</InputLabel>\n        <Select value=\"0x0000000000000000000000000000000000000000\" fullWidth>\n          <MenuItem value=\"\">\n            <em>0x0000000000000000000000000000000000000000</em>\n          </MenuItem>\n          <MenuItem value={\"0x0000000000000000000000000000000000000001\"}>0x0000000000000000000000000000000000000001</MenuItem>\n          <MenuItem value={\"0x0000000000000000000000000000000000000002\"}>0x0000000000000000000000000000000000000002</MenuItem>\n        </Select>\n      </FormControl>\n    </div>\n    <div>\n      <TextField\n        autoFocus\n        margin=\"dense\"\n        id=\"amount\"\n        label={t('form-dialog.amount')}\n        type=\"number\"\n        step=\"any\"\n        fullWidth\n      />\n    </div>\n  </DialogContent>\n  <DialogActions>\n    <Button onClick={handleClose} color=\"primary\">\n      {t('form-dialog.cancel')}\n    </Button>\n    <Button onClick={handleClose} color=\"primary\">\n      {t('form-dialog.transfer')}\n    </Button>\n  </DialogActions>\n</Dialog>\n);\n\nFormDialog.propTypes = {\n  handleClose: PropTypes.func,\n  open: PropTypes.bool,\n  t: PropTypes.func\n};\n\nexport default withTranslation()(FormDialog);\n","import React, {Component, Fragment} from 'react';\nimport GeneralError from './general-error';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport LoadingIndicator from './loading-indicator';\nimport CardItem from './card-item';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport FormDialog from './form-dialog';\n\nconst styles = theme => ({\n  center: {\n    textAlign: 'center'\n  },\n  progress: {\n    marginTop: theme.spacing.unit * 2\n  },\n  fab: {\n    position: 'fixed',\n    bottom: theme.spacing.unit * 6,\n    right: theme.spacing.unit * 6,\n    color: theme.palette.common.white\n  }\n});\n\nclass UserFeed extends Component {\n  state = {\n    open: false\n  }\n\n  handleClose = () => {\n    this.setState({open: false});\n  }\n\n  handleOpen = () => {\n    this.setState({open: true});\n  }\n\n  render() {\n    const {classes, error, loading, loadMore, data: {users}} = this.props;\n\n    if (loading) return <LinearProgress color=\"primary\" />;\n    if (error) return <GeneralError classes={classes} message={error.message} />;\n\n    return (<Fragment>\n      <InfiniteScroll\n        pageStart={0}\n        initialLoad={false}\n        loadMore={loadMore}\n        hasMore={true}\n        loader={<LoadingIndicator key={new Date().getTime()} classes={classes} />}\n      >\n        {users.map(({ id, txs, exchangeBalances }, i) => (\n          <CardItem key={i} id={id} exchangeBalances={exchangeBalances} transactions={txs} />\n        ))}\n      </InfiniteScroll>\n\n      <Fab color=\"primary\" className={classes.fab} onClick={this.handleOpen}>\n        <AddIcon />\n      </Fab>\n\n      <FormDialog open={this.state.open} handleClose={this.handleClose} />\n    </Fragment>);\n  }\n}\n\nUserFeed.propTypes = {\n  classes: PropTypes.object,\n  error: PropTypes.object,\n  loading: PropTypes.bool,\n  loadMore: PropTypes.func,\n  data: PropTypes.object\n};\n\nexport default withStyles(styles)(UserFeed);\n","import React from 'react';\nimport UserQuery from '../queries/user-query';\nimport UserFeed from '../components/user-feed';\n\nconst ApplicationData = () => (\n  <UserQuery>\n    <UserFeed />\n  </UserQuery>\n);\n\nexport default ApplicationData;\n","import React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.grey['A500'],\n    overflow: 'hidden',\n    backgroundSize: 'cover',\n    backgroundPosition: '0 400px',\n    marginTop: 20,\n    padding: 20,\n    paddingBottom: 200\n  },\n  grid: {\n    width: 1000\n  }\n});\n\nconst Template = ({classes, children}) => (\n  <div className={classes.root}>\n    <Grid container justify=\"center\">\n      <Grid spacing={24} alignItems=\"center\" justify=\"center\" container className={classes.grid}>\n        <Grid item xs={12}>\n          {children}\n        </Grid>\n      </Grid>\n    </Grid>\n  </div>\n);\n\nTemplate.propTypes = {\n  classes: PropTypes.object,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n};\n\nexport default withStyles(styles)(Template);\n","import i18n from \"i18next\";\nimport LngDetector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from \"react-i18next\";\n\nimport translationEn from './locales/en.json';\n\ni18n\n  .use(initReactI18next)\n  .use(LngDetector)\n  .init({\n    resources: {\n      en: {\n        translation: translationEn\n      }\n    },\n    debug: true,\n    fallbackLng: \"en\",\n    interpolation: {\n      escapeValue: false\n    }\n  });\n\nexport default i18n;\n","import React, { Component } from 'react';\nimport './app.css';\nimport { ApolloProvider } from 'react-apollo';\nimport client from './api/apollo';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport SectionHeader from './layout/section-header';\nimport ApplicationData from './layout/application-data';\nimport Template from './layout/template';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { I18nextProvider } from 'react-i18next';\nimport i18n from './i18n';\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true\n  },\n  palette: {\n    primary: {\n      main: '#dc6be5'\n    }\n  }\n});\n\nclass App extends Component {\n  render() {\n    return (\n      <ApolloProvider client={client}>\n        <MuiThemeProvider theme={theme}>\n          <I18nextProvider i18n={ i18n }>\n            <CssBaseline />\n            <Template>\n              <SectionHeader title=\"🦄 Uniswap - User data\" subtitle=\"by @rramos\" />\n              <ApplicationData />\n            </Template>\n          </I18nextProvider>\n        </MuiThemeProvider>\n      </ApolloProvider>\n    );\n  }\n}\n\nexport default App;\n","/* eslint-disable unicorn/filename-case  */\n/* eslint-disable no-eq-null */\n/* eslint-disable unicorn/regex-shorthand */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />,  document.querySelector('#root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}